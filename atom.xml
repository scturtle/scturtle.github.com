<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ScTurtle's Pool]]></title>
  <link href="http://scturtle.me/atom.xml" rel="self"/>
  <link href="http://scturtle.me/"/>
  <updated>2013-12-19T17:51:00</updated>
  <id>http://scturtle.me</id>
  
  <entry>
    <title type="html"><![CDATA[Python 字符串格式化详参]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/1219-string-format-python/"/>
    <updated>2013-12-19T18:00:00</updated>
    <id>http://scturtle.me/2013/1219-string-format-python/</id>
    <content type="html"><![CDATA[
<p><a href="http://docs.python.org/dev/library/string.html#formatspec">来源docs</a></p>
<p><code>{}</code> 包裹的是替换域，<code>{{</code> 和 <code>}}</code> 可用来 escape。</p>
<p>语法</p>
<div class="codehilite"><pre>替换域 ::=  &quot;{&quot; [域名] [&quot;!&quot; 转换] [&quot;:&quot; 格式] &quot;}&quot;
域名   ::=  参数名 (&quot;.&quot; 属性名 | &quot;[&quot; 索引 &quot;]&quot;)*
参数名 ::=  [关键字 | 数字]
属性名 ::=  关键字
索引   ::=  数字 | 索引字符串
索引   ::=  &lt;任何字符除了 &quot;]&quot;&gt; +
转换   ::=  &quot;r&quot; | &quot;s&quot; | &quot;a&quot;
格式   ::=  &lt;如下介绍&gt;
</pre></div>


<p>参数名要么是关键字（keyword=“...”）要么是数字（标识第几个参数，3.1中默认可忽略）。
参数名后可加 <code>.属性名</code>（<code>getattr()</code>）或 <code>[索引]</code>（<code>__getitem__()</code>）。</p>
<p>转换域进行格式化之前的强制类型转换（而不是默认的<code>__format__()</code>）。<code>!s</code> 调用 <code>str()</code>，<code>!r</code> 调用 <code>repr()</code>，<code>!a</code> 调用 <code>ascii()</code>。</p>
<p>格式域控制字段宽度，对齐，填充，小数精度等。依据是每种类型自己定义的<code>微语言</code>。格式域可嵌套但只能包含域名。大多数内置类型支持默认的微语言：</p>
<div class="codehilite"><pre>格式 ::=  [[fill]align][sign][#][0][width][,][.precision][type]
fill     ::=  &lt;填充字符除了 &#39;{&#39; or &#39;}&#39;&gt;
align ::=  &quot;&lt;&quot; | &quot;&gt;&quot; | &quot;=&quot; | &quot;^&quot;
sign  ::=  &quot;+&quot; | &quot;-&quot; | &quot; &quot;
width ::=  integer
precision ::=  integer
type ::=  &quot;b&quot; | &quot;c&quot; | &quot;d&quot; | &quot;e&quot; | &quot;E&quot; | &quot;f&quot; | &quot;F&quot; | &quot;g&quot; | &quot;G&quot; | &quot;n&quot; | &quot;o&quot; | &quot;s&quot; | &quot;x&quot; | &quot;X&quot; | &quot;%&quot;
</pre></div>


<p>align：左对齐，右对齐，填充符号和数字间，居中。</p>
<p>sign：正数前+负数前-，正数前无负数前-，正数前空格负数前-。</p>
<p>#：整数、浮点数、复数和 Decimal 使用<code>替代格式</code>。比如整数在用十六进制输出时添加<code>0x</code>前缀。</p>
<p>width：前导<code>0</code>则相当于<code>fill='0' &amp; align='='</code>。</p>
<p>,：数字自动添加千分号。</p>
<p>precision：和<code>type = "f" | "F" | "g" | "G"</code>控制浮点精度，或表示最大域空间。</p>
<p>type：二进制，字符，十进制，科学计数，科学计数大写，定点，定点(NAN, INF)，
<em>标准格式（太长）</em>，标准格式大写，<em>数字</em>，八进制，十六进制，十六进制大写，百分比。
不写的话整数十进制，浮点数差不多是标准格式。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Average Running Time of Quicksort]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/1109-quicksort/"/>
    <updated>2013-11-09T20:00:00</updated>
    <id>http://scturtle.me/2013/1109-quicksort/</id>
    <content type="html"><![CDATA[
<p>From an interesting <a href="http://aofa.cs.princeton.edu/lectures/lectures13/AA01-AofA.pdf">slide</a>.</p>
<p>We denote <mathjax>$C_N$</mathjax> as the <em>expected</em> number of comparisons used by sorting an array of length <mathjax>$N$</mathjax>.
The recursive formula is like this:
<mathjax>$$C_N = (N+1) + \sum_{1\leq k \leq N} \frac 1N (C_{k-1}+C_{N-k})$$</mathjax></p>
<p>which <mathjax>$N+1$</mathjax> is the comparisons needed for partitioning, 
and then plus <mathjax>$N$</mathjax> ways of partitioning with equal probability.
Also we have <mathjax>$C_0 = 0$</mathjax>. </p>
<p>Noticing the symmetric parttern in the sum part, we get:
<mathjax>$$C_N = (N+1) + \frac 2N \sum_{1\leq k \leq N} C_{k-1}$$</mathjax>
then
<mathjax>$$NC_N = N(N+1) + 2 \sum_{1\leq k \leq N} C_{k-1}$$</mathjax></p>
<p>Time to high school math. First, we write down same formula for N-1:
<mathjax>$$(N-1)C_{N-1} = (N-1)N + 2 \sum_{1\leq k \leq N-1} C_{k-1}$$</mathjax></p>
<p>Then we subtract the above two equations to get:
<mathjax>$$NC_N - (N-1)C_{N-1} = 2N + 2C_{N-1}$$</mathjax>
<mathjax>$$NC_N = (N+1)C_{N-1} + 2N$$</mathjax></p>
<p>Key and tricky step, divide both side by <mathjax>$N(N+1)$</mathjax>:
<mathjax>$$\frac{C_N}{N+1} = \frac{C_{N-1}}{N} + \frac{2}{N+1}$$</mathjax></p>
<p>Expand the right part to the end of the world:
<mathjax>$$\begin{split}
\frac{C_N}{N+1} &amp;= \frac{C_{N-1}}{N} + \frac 2{N+1} \\
&amp;= \frac{C_{N-2}}{N-1} + \frac 2N + \frac 2{N+1} \\
&amp;= C_0 + \frac 22 + \frac 23 + \dots + \frac 2N + \frac 2{N+1}
\end{split}$$</mathjax></p>
<p>Ignore small items:
<mathjax>$$c_N \sim 2N \sum_{1 \leq k \leq N} \frac 1k - 2N$$</mathjax></p>
<p>Finally, use the magic <a href="http://en.wikipedia.org/wiki/Euler%E2%80%93Mascheroni_constant"><code>Euler constant</code></a> <mathjax>$\gamma$</mathjax>:
<mathjax>$$\begin{split}
c_N &amp;\sim 2N (\int_1^\infty \frac 1x \mathrm{d} x + \gamma) - 2N \\
&amp;=2N \ln N - 2(1-\gamma)N
\end{split}$$</mathjax></p>
<p>It's <mathjax>$O(N \log N)$</mathjax>.</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[One Punch Man]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/1028-one-punch-man/"/>
    <updated>2013-10-28T00:00:00</updated>
    <id>http://scturtle.me/2013/1028-one-punch-man/</id>
    <content type="html"><![CDATA[
<p><img alt="one punch man" src="http://i.imgur.com/9oBxUQc.jpg" /></p>
<p>继上半年看完了《二十世纪少年》后，最近补完了漫画《一拳超人》的重制版，又把原作版也追到最新了。很久没有看到这么喜欢的漫画了。各种随随便便又颠覆传统的设定，再加上主角那超像麻仓叶的吊儿郎当的个性，真是让我爱不释手啊。</p>
<p>在<a href="http://www.mh5.tw/comic/9758/61242/p/20">番外篇2</a>中有这么一幕小女孩和主角的对话。其中几句有些感触：</p>
<p>「当我在你这个年纪我也很怕这个世界， <br />
即便到现在对我来说生活也没有变得更好」 <br />
「但你很强，光头」 <br />
「不管你强还是弱」   </p>
<p>不管你强还是弱，可能像<a href="http://www.hecaitou.com/blogs/hecaitou/archives/134603.aspx">和菜头</a>先生说的那样，一种可以对生活应付裕如的心态从来不存在。没有人容易。但是在艰难之中依然步履不停，依然可以因种种小快乐欣喜，依然愿意去分担另一个人的不易，可能是我目前觉得最好的状态了。</p>
<p>于是借和菜头那篇的最后的句式，也对自己说一句：   </p>
<p>生日快乐！scturtle 君！</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Compile a better GVim for Windows]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/0716-compile-vim/"/>
    <updated>2013-07-16T22:00:00</updated>
    <id>http://scturtle.me/2013/0716-compile-vim/</id>
    <content type="html"><![CDATA[
<p>GVim in the default distribution is ugly on Windows. 
It's not hard to build a better one.</p>
<p><em>1.</em> Get the source of Vim:</p>
<div class="codehilite"><pre>&gt; hg clone https://vim.googlecode.com/hg/ vim
</pre></div>


<p><em>2.</em> To get better font renderer, comment out these lines in <code>src/gui_w32.c</code>:</p>
<div class="codehilite"><pre>......
    /* On NT, tell the font renderer not to &quot;help&quot; us with Hebrew and Arabic
     * text.  This doesn&#39;t work in 9x, so we have to deal with it manually on
     * those systems. */
<span class="gi">+   /*</span>
    if (os_version.dwPlatformId == VER_PLATFORM_WIN32_NT)
        foptions |= ETO_IGNORELANGUAGE;
<span class="gi">+   */</span>
......
</pre></div>


<p><em>3.</em> To support non-monospace fonts, comment out these lines in <code>src/os_mswin.c</code>:</p>
<div class="codehilite"><pre>......
 #ifndef FEAT_PROPORTIONAL_FONTS
    /* Ignore non-monospace fonts without further ado */
<span class="gi">+   /*</span>
    if ((ntm-&gt;tmPitchAndFamily &amp; 1) != 0)
        return 1;
<span class="gi">+   */</span>
 #endif
......
</pre></div>


<p><em>4.</em> Get this <a href="http://tuxproject.de/projects/vim/_compile.bat.php">compile.bat</a>, 
and modify compilation flags as follows(assuming you have Virsual Studio):</p>
<div class="codehilite"><pre>......
nmake -f Make_mvc.mak GUI=yes OLE=yes IME=yes GIME=yes DYNAMIC_IME=yes GDYNAMIC_IME=yes CSCOPE=yes MULTI_BYTE=yes MULTI_BYTE_IME=yes FEATURES=HUGE PYTHON=c:\Python27 DYNAMIC_PYTHON=yes PYTHON_VER=27
......
</pre></div>


<p><em>5.</em> Run it at the <code>vim</code> folder, 
and you will get a new distribution of vim at <code>src\templateoutput</code>.
Move it to a suitable place, and run <code>install.exe</code> in it to do further configuration.
Done!</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Snake AI in python]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/0531-snake/"/>
    <updated>2013-05-31T14:00:00</updated>
    <id>http://scturtle.me/2013/0531-snake/</id>
    <content type="html"><![CDATA[
<p>Simple snake AI demo in python and pygame.
Inspired by <a href="http://hawstein.com/posts/snake-ai.html">this blog</a>.
Code is <a href="https://gist.github.com/scturtle/5678355">here</a>.</p>
<p><img alt="snake.gif" src="http://dl.dropboxusercontent.com/u/1551217/share/snake.gif" /></p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Turtlenote]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/0426-turtlenote/"/>
    <updated>2013-04-26T15:00:00</updated>
    <id>http://scturtle.me/2013/0426-turtlenote/</id>
    <content type="html"><![CDATA[
<p>An online markdown editor (in JS) supporting vi-mode key binding, code highlighting and tex formula.</p>
<p><a href="http://scturtle.me/turtlenote/"><img alt="screenshort" src="http://i.imgur.com/E6Ar5bs.png" /></a></p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Random Sampling]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/0417-random-sampling/"/>
    <updated>2013-04-17T19:00:00</updated>
    <id>http://scturtle.me/2013/0417-random-sampling/</id>
    <content type="html"><![CDATA[
<p>Given a set of items, choosing random one with equal probability can be done by <code>random.choice(items)</code>.
But what if we are given items one by one without knowing the length of the whole set?</p>
<p>There is a simple algorithm: For the <mathjax>$k$</mathjax>-th item, we give up previous selection and choose this one with probability <mathjax>$\frac 1 k$</mathjax>.
Proof as follows: If we select the <mathjax>$k$</mathjax>-th item, it means that we choose it with probability <mathjax>$\frac 1 k$</mathjax> and give up all successors. 
Product of probabilities of all these choices is:</p>
<p><mathjax>$$ p_k = \frac 1 k \times \frac {k} {k+1} \times \cdots \times \frac {n-2}{n-1} \times \frac {n-1} n = \frac 1 n $$</mathjax></p>
<p>Codes in Python:</p>
<div class="codehilite"><pre><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">choice</span><span class="p">(</span><span class="n">items</span><span class="p">):</span>
    <span class="n">selection</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">item</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">items</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">selection</span> <span class="o">=</span> <span class="n">item</span>
    <span class="k">return</span> <span class="n">selection</span>
</pre></div>


<p>We can generalize this algorithm. For a set of items, each one is associated with a weight <mathjax>$w_i$</mathjax>.
Our goal is to select a random one based on its weight ratio.
The algorithm is similar to the previous one: For the <mathjax>$k$</mathjax>-th item, replace the current selection with it with probability <mathjax>$\frac {w_k} {\sum_{i=1}^k w_i}$</mathjax>.
Proof is analogical:</p>
<p><mathjax>$$p_k = \frac {w_k} {\sum_{i=1}^k w_i} \times \frac {\sum_{i=1}^k w_i} {\sum_{i=1}^{k+1} w_i} 
\times \cdots \times \frac {\sum_{i=1}^{n-2} w_i} {\sum_{i=1}^{n-1} w_i} \times \frac {\sum_{i=1}^{n-1} w_i} {\sum_{i=1}^{n} w_i} = \frac {w_k} {\sum_{i=1}^n w_i}$$</mathjax></p>
<p>Codes in Python:</p>
<div class="codehilite"><pre><span class="k">def</span> <span class="nf">weightedChoice</span><span class="p">(</span><span class="n">items</span><span class="p">,</span> <span class="n">weights</span><span class="p">):</span>
    <span class="n">selection</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="n">total_weight</span> <span class="o">=</span> <span class="mf">0.0</span>
    <span class="k">for</span> <span class="n">item</span><span class="p">,</span> <span class="n">weight</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">items</span><span class="p">,</span> <span class="n">weights</span><span class="p">):</span>
        <span class="n">total_weight</span> <span class="o">+=</span> <span class="n">weight</span>
        <span class="k">if</span> <span class="n">random</span><span class="o">.</span><span class="n">random</span><span class="p">()</span> <span class="o">*</span> <span class="n">total_weight</span> <span class="o">&lt;</span> <span class="n">weight</span><span class="p">:</span>
            <span class="n">selection</span> <span class="o">=</span> <span class="n">item</span>
    <span class="k">return</span> <span class="n">selection</span>
</pre></div>


<p>There is another amazing method to do this weighted random sampling:
For each item, get a random <mathjax>$r_i \in [0, 1]$</mathjax>,
and <em>reweight</em> this item as <mathjax>$w'_i = r_i^{1 / {w_i}}$</mathjax>.
Then we can select the one with the top new weight. Proof of this is a bit annoying.</p>
<p>If we choose the <mathjax>$i$</mathjax>-th item at last, this means <mathjax>$\forall j\neq i, w'_j &lt;w'_i$</mathjax>. As <mathjax>$r_i \in [0, 1]$</mathjax>, the probability is:</p>
<p><mathjax>$$ p_i = \int_0^1 p(\forall j\neq i, w'_j &lt;w'_i)\ \mathrm{d}\ r_i $$</mathjax></p>
<p><mathjax>$r_j$</mathjax> is independent with each other. So:</p>
<p><mathjax>$$ p_i = \int_0^1 \prod_{j \neq i} p(w'_j &lt;w'_i)\ \mathrm{d} \ r_i $$</mathjax></p>
<p>As <mathjax>$r_j \in [0, 1]$</mathjax>, the inner probability can be simplified as:</p>
<p><mathjax>$$ p(w'_j &lt;w'_i) = p(r_j^{1 / w_j} &lt; r_i^{1 / w_i}) = p(r_j &lt; r_i^{w_j / w_i}) = r_i^{w_j / w_i} $$</mathjax></p>
<p>So:</p>
<p><mathjax>$$ p_i = \int_0^1 \prod_{j \neq i} r_i^{w_j / w_i}\ \mathrm{d}\ r_i
= \int_0^1 r_i^{(w-w_i) / w_i}\ \mathrm{d}\ r_i = \frac {w_i} w $$</mathjax></p>
<p>Same as our expectation.</p>
<p>This blog is basically a summary of
<a href="http://www.gocalf.com/blog/random-selection.html">these</a>
<a href="http://www.gocalf.com/blog/weighted-random-selection.html">three</a>
<a href="http://www.gocalf.com/blog/weighted-random-selection-2.html">blogs</a>.
Refer to them for more content.</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[About Desktop]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/0329-about-desktop/"/>
    <updated>2013-03-29T11:00:00</updated>
    <id>http://scturtle.me/2013/0329-about-desktop/</id>
    <content type="html"><![CDATA[
<p>日子水过，好久没更，这两天的一点琐碎想法，本来想写在推上，干脆拿来充一篇。</p>
<p><a href="http://fosschef.com/2011/04/one-funny-wallpaper-of-why-linux/"><img alt="Imgur" src="http://i.imgur.com/U6K7R83.jpg" /></a></p>
<p>前几天翻 fav 发现这么张壁纸，看到那句「只是因为她好好玩哦」，
想起原来折腾 linux 真的只是因为足够折腾，可以用来打发无聊时间。
原来也推崇过 free 什么的，现在真是越来越现实，系统就是系统，
用来干活的。熟悉起来，哪个干活都行。
重心慢慢向做事上转移，折腾带来的麻烦大于乐趣时，
就会从 linux 向 win 和 osx 转移（除非工作环境就是 linux）。</p>
<p>看别人的 mac 上跑着 win 也不觉得什么了，
看别人 win 上装着 XX管家、XX卫士、国产杀(yú)毒(lè)软件也不说什么了，
看别人用 IE 一样用的很 happy 那就那样吧。
只是在看到别人用着 360 系的东西时还是忍不住劝劝，这个毛病也得改。
原来热衷的那些分区、清理垃圾、整理磁盘缓存、winPE 现在看看真没什么必要，
也开始劝别人一个 C 盘就好了嘛，东西放在 win 给你分好类的库文件夹下就好了嘛。
丢过几次东西后，重要的都习惯放在云上，电脑里几乎啥都不存了，
格了好像也没丢什么，确实越来越像个一般工具了。</p>
<p>还有想到就是从小到大的电脑都特么挺贵的，但是显卡都不好，玩不了市面上正火的游戏。
每次都想下一次换个贵点儿的高端洋气上档次的，
把市面上高洋上的游戏都玩个遍，过了这几年的瘾，
最后还是很囧地发现跑不起来，快成诅咒了。
原来也想把想玩儿但跑不起来的游戏记下来，等过几年自然就可以跑这些过时的游戏了。
不过又应了一句俗话，等太久来的东西往往不是当初的样子了。
而且最近发现找个想玩的游戏都难了。</p>
<p>这肯定是中了叫做“玩不了好游戏”的诅咒。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Configure forward/inverse search with Vim-LaTeX and SamutraPDF]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/1/22/forward-inverse-search/"/>
    <updated>2013-01-22T18:30:00</updated>
    <id>http://scturtle.me/2013/1/22/forward-inverse-search/</id>
    <content type="html"><![CDATA[
<p>Get the newest version of <a href="http://vim-latex.svn.sourceforge.net/viewvc/vim-latex/trunk/vimfiles/">Vim-LaTeX</a>.
There is a <code>Download GNU tarball</code> link at the bottom.
(I use <a href="https://github.com/gmarik/vundle">vundle</a> to install a old version 
and replace it with the newest.)</p>
<p>Get the newest version of <a href="https://sites.google.com/site/xhmikosr/progs/officetools">SumatraPDF</a>. Add the directory paths  of SumatraPDF and gvim into the system path variable.</p>
<p>Download <a href="http://d.pr/f/LbV">dde.exe</a>. Put it in <code>ftplugin\latex-suite\</code>.</p>
<p>Modify <code>ftplugin\latex-suite\compiler.vim</code> with the following patch:</p>
<div class="codehilite"><pre><span class="gd">--- compiler.vim.orig   Sat Oct 30 00:55:22 2010</span>
<span class="gi">+++ compiler.vim    Tue Jan 22 18:21:10 2013</span>
<span class="gu">@@ -321,6 +321,7 @@</span>
 &quot;           gvim --servername LATEX --remote-silent +%l &quot;%f&quot;
 &quot;      For inverse search, if you are reading this, then just pressing \ls
 &quot;      will work.
<span class="gi">+let s:path = expand(&#39;&lt;sfile&gt;:p:h&#39;)</span>
 function! Tex_ForwardSearchLaTeX()
    if &amp;ft != &#39;tex&#39;
        echo &quot;calling Tex_ForwardSeachLaTeX from a non-tex file&quot;
<span class="gu">@@ -343,10 +344,20 @@</span>

    &quot; inverse search tips taken from Dimitri Antoniou&#39;s tip and Benji Fisher&#39;s
    &quot; tips on vim.sf.net (vim.sf.net tip #225)
<span class="gd">-   if (has(&#39;win32&#39;) &amp;&amp; (viewer == &quot;yap&quot; || viewer == &quot;YAP&quot; || viewer == &quot;Yap&quot;))</span>
<span class="gi">+   if (has(&#39;win32&#39;) &amp;&amp; (viewer == &quot;yap&quot; || viewer == &quot;YAP&quot; || viewer == &quot;Yap&quot; || viewer =~? &quot;^sumatrapdf&quot;))</span>

<span class="gd">-       let execString = &#39;silent! !start &#39;. viewer.&#39; -s &#39;.line(&#39;.&#39;).expand(&#39;%&#39;).&#39; &#39;.mainfnameRoot</span>
<span class="gi">+       if (viewer == &quot;yap&quot; || viewer == &quot;YAP&quot; || viewer == &quot;Yap&quot;)</span>

<span class="gi">+           let execString = &#39;silent! !start &#39;. viewer.&#39; -s &#39;.line(&#39;.&#39;).expand(&#39;%&#39;).&#39; &#39;.mainfnameRoot</span>
<span class="gi">+</span>
<span class="gi">+       elseif viewer =~? &quot;^sumatrapdf&quot;</span>
<span class="gi">+           </span>
<span class="gi">+           &quot; SumatraPDF forward search</span>
<span class="gi">+           let relativeFile=substitute(expand(&quot;%:p&quot;), &quot;\\/&quot;, &#39;\&#39;,&quot;g&quot;)</span>
<span class="gi">+           let pdfname=substitute(mainfnameFull.&#39;.&#39;.s:target, &quot;\\/&quot;, &#39;\&#39;,&quot;g&quot;)</span>
<span class="gi">+           let execString = &#39;silent! !start &quot;&#39;.s:path.&#39;/dde.exe&quot; SUMATRA SUMATRA control &quot;[ForwardSearch(&quot;&#39;.pdfname.&#39;&quot;,&quot;&#39;.relativeFile.&#39;&quot;,&#39;.line(&#39;.&#39;).&#39;,0,0,0)]&quot; true&#39;</span>
<span class="gi">+</span>
<span class="gi">+       endif</span>

    elseif (has(&#39;macunix&#39;) &amp;&amp; (viewer == &quot;Skim&quot; || viewer == &quot;PDFView&quot; || viewer == &quot;TeXniscope&quot;))
        &quot; We&#39;re on a Mac using a traditional Mac viewer
</pre></div>


<p>Add following configurations into <code>_vimrc</code>:</p>
<div class="codehilite"><pre><span class="k">filetype</span> plugin <span class="k">on</span>
<span class="c">&quot;set shellslash  &quot; conflict with vundle</span>
<span class="k">set</span> <span class="nb">grepprg</span><span class="p">=</span><span class="k">grep</span>\ <span class="p">-</span>nH\ $*
<span class="k">filetype</span> indent <span class="k">on</span>
<span class="k">let</span> <span class="k">g</span>:Tex_Leader<span class="p">=</span><span class="s1">&#39;,&#39;</span>  <span class="c">&quot; I use this</span>
<span class="k">let</span> <span class="k">g</span>:tex_flavor<span class="p">=</span><span class="s1">&#39;latex&#39;</span>
<span class="k">let</span> <span class="k">g</span>:Tex_DefaultTargetFormat <span class="p">=</span> <span class="s1">&#39;pdf&#39;</span>
<span class="k">let</span> <span class="k">g</span>:Tex_ViewRule_pdf <span class="p">=</span> <span class="s1">&#39;SumatraPDF -reuse-instance -inverse-search &quot;gvim -c \&quot;:RemoteOpen +\%l \%f\&quot;&quot;&#39;</span>
<span class="k">let</span> <span class="k">g</span>:Tex_CompileRule_pdf <span class="p">=</span> <span class="s1">&#39;pdflatex -synctex=-1 -src-specials -interaction=nonstopmode $*&#39;</span>
</pre></div>


<p>Then, <code>,ll</code> to compile, <code>,ls</code> to forward search and double click in SumatraPDF to inverse search.</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Draw a 3D heart in browser]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2013/1/5/heart/"/>
    <updated>2013-01-05T17:00:00</updated>
    <id>http://scturtle.me/2013/1/5/heart/</id>
    <content type="html"><![CDATA[
<p>Valentine's Day is approaching. Let's have some fun.</p>
<p>First, we all know that <code>mathematica</code> can draw a beautiful
3d heart with only one single command:</p>
<div class="codehilite"><pre>ContourPlot3D[
  320 (-x^2 z^3 - 9 y^2 z^3/80 + (x^2 + 9 y^2/4 + z^2 - 1)^3) == 0,
  {x, -1.3, 1.3}, {y, -1.3, 1.3}, {z, -1.3, 1.3}, 
  ContourStyle -&gt; Directive[Red]]
</pre></div>


<p><img alt="heart" src="/2013/1/5/heart/img/heart.png" /></p>
<p>Let's save it as a model file with this command:</p>
<div class="codehilite"><pre>Export[&quot;heart.ply&quot;, %]
</pre></div>


<p>We need <code>blender</code> to convert it into another format. 
Download it <a href="http://www.blender.org/download/get-blender">here</a> and 
install <code>three.js</code> extension <a href="https://github.com/mrdoob/three.js/tree/master/utils/exporters/blender">here</a>.</p>
<p>Open <code>blender</code> you will see a default cube. 
On the left menu column you will see a <code>Delete</code>.  <br />
<em>Yes! Go you!</em> <br />
Then <code>File</code> -&gt; <code>Import</code> -&gt; <code>Stanford (.ply)</code>,
and select our <code>heart.ply</code>. You will see it like this.</p>
<p><img alt="heart2" src="/2013/1/5/heart/img/heart2.png" /></p>
<p>Next, <code>File</code> -&gt; <code>User Preferences</code> -&gt; <code>Addons</code>,
find a addon named <code>three.js format</code> and enable it. 
Then <code>File</code> -&gt; <code>Export</code> -&gt; <code>Three.js (.js)</code> and we will get a <code>heart.js</code>. 
It can be imported by <code>three.js</code> and shown in browser. </p>
<p>The final step contains a little more codes 
(<a href="https://github.com/scturtle/heart">github</a>)
and <a href="http://scturtle.me/heart/heart.html">here</a> is the final example.</p>
<p><img alt="heart3" src="/2013/1/5/heart/img/heart3.png" /></p>
<p>This model is handy and you can do more romantic things with powerful <code>three.js</code>.  <br />
But you have to make sure that she has a "real" browser supporting <code>webGL</code>.</p>
]]> </content>
  </entry>
</feed>
