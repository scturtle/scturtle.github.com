<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ScTurtle's Pool]]></title>
  <link href="http://scturtle.me/atom.xml" rel="self"/>
  <link href="http://scturtle.me/"/>
  <updated>2012-11-07T09:39:00</updated>
  <id>http://scturtle.me</id>
  <entry>
    <title type="html"><![CDATA[情报理工海报的图像处理]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/11/6/poster-ocr/"/>
    <updated>2012-11-06T22:00:00</updated>
    <id>http://scturtle.me/2012/11/6/poster-ocr/</id>
    <content type="html"><![CDATA[
<p>最近这个东京大学情报理工的海报很火啊，试着做了做，无奈光 OCR 这个步骤就搞不定了。记下来权当消遣吧。</p>
<p>首先我们来选一张新的海报，这张貌似是今年的：</p>
<p><img class=align-center src='/2012/11/6/poster-ocr/img/poster.jpg' style='width:50%'/></p>
<p>怎么 OCR 呢？直接拿“某某OCR”上貌似不太靠谱啊，那就先做一下预处理吧。首先试了下 Paint.NET 来做黑白、反色、调对比度，效果不好。</p>
<p>注意到 0 和 1 都是灰色的，那就从颜色着手。灰说明 RGB 三个值相似，那就测试一下 3 个值和平均值的差（的绝对值的和），如果小于一定范围，而且这个平均值也在一定范围中，那么差不多就是灰色了。把其他颜色置白，灰色加黑就好。调参数的过程比较枯燥，但是相比试过的其他方法效果好多了。效果图：</p>
<p><img class=align-center src='/2012/11/6/poster-ocr/img/p1.png' style='width:50%'/></p>
<p>然后注意到红底部分咋全军覆没了呢？看了看取色的值，发现灰色和红色叠加后，RGB 值改变较大，于是又单独做了一下这个区域的范围，得到了更好的效果：</p>
<p><img class=align-center src='/2012/11/6/poster-ocr/img/p2.png' style='width:50%'/></p>
<p>这部分的代码：</p>
<div class="codehilite"><pre><span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>

<span class="n">im</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s">&#39;poster.jpg&#39;</span><span class="p">)</span>

<span class="n">pix</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>

<span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">size</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
        <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span> <span class="o">=</span> <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span>
        <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="n">c</span><span class="p">)</span> <span class="o">/</span> <span class="mi">3</span>
        <span class="k">if</span> <span class="mi">140</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">&lt;</span> <span class="mi">170</span><span class="p">:</span>
            <span class="n">avg</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">abs</span><span class="p">,</span> <span class="p">(</span><span class="n">a</span> <span class="o">-</span> <span class="n">m</span><span class="p">,</span> <span class="n">b</span> <span class="o">-</span> <span class="n">m</span><span class="p">,</span> <span class="n">c</span> <span class="o">-</span> <span class="n">m</span><span class="p">)))</span>
            <span class="k">if</span>   <span class="n">avg</span> <span class="o">&lt;</span> <span class="mi">50</span><span class="p">:</span>
                <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">avg</span> <span class="o">&lt;</span> <span class="mi">70</span><span class="p">:</span>
                <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">avg</span> <span class="o">&lt;</span> <span class="mi">90</span><span class="p">:</span>
                <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">150</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mi">150</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">if</span> <span class="mi">80</span> <span class="o">&lt;</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="mi">150</span> <span class="ow">and</span> <span class="mi">70</span> <span class="o">&lt;</span> <span class="n">b</span> <span class="o">&lt;</span> <span class="mi">140</span> <span class="ow">and</span> <span class="mi">70</span> <span class="o">&lt;</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="mi">140</span><span class="p">:</span>
                <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">pix</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>

<span class="n">im</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">im</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s">&#39;p.png&#39;</span><span class="p">,</span> <span class="s">&#39;png&#39;</span><span class="p">)</span>
</pre></div>


<p>这总可以拿去 OCR 了吧，无奈试了几个 OCR 的，都没效果。看来处理得还是太挫啊。本想就此打住写作业去，结果手痒又想起拿滑窗自己做下 OCR。机器学习什么的还是不去折腾了，就进行屌丝级像素比对吧。注意到一件比较蛋疼的事，那就是 0 和 1 特么的不对齐！连续的 1 有时候会吃掉一个宽像素，连续的 0 有时候又会撑出来一个。于是在滑窗的过程中做了一个抖动的判断，效果很好。下面是第一行的一部分和其结果（都正确呵呵）：</p>
<p><img class=align-center src='/2012/11/6/poster-ocr/img/test.png' style='width:50%'/></p>
<p><center>
<code>1000111011100100110000101100100011101010</code>
</center></p>
<p>这部分的代码：</p>
<div class="codehilite"><pre><span class="c"># coding: utf-8</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>

<span class="n">im</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s">&#39;test.png&#39;</span><span class="p">)</span>
<span class="n">im</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s">&#39;L&#39;</span><span class="p">)</span>  <span class="c"># 转灰度</span>
<span class="n">pix</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<span class="n">size</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">im</span><span class="o">.</span><span class="n">size</span><span class="p">)</span>

<span class="c"># 获得7*5的区域的灰度矩阵</span>
<span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">):</span>
    <span class="n">d</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">7</span><span class="p">)]</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">)]</span>
    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">7</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
            <span class="n">d</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="n">pix</span><span class="p">[</span><span class="n">sx</span> <span class="o">+</span> <span class="n">x</span><span class="p">,</span> <span class="n">sy</span> <span class="o">+</span> <span class="n">y</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">d</span>

<span class="c"># 前两个作为0,1标准</span>
<span class="n">d1</span> <span class="o">=</span> <span class="n">get</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">d0</span> <span class="o">=</span> <span class="n">get</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

<span class="c"># 灰度矩阵和标准间比对打分</span>
<span class="k">def</span> <span class="nf">score</span><span class="p">(</span><span class="n">da</span><span class="p">,</span> <span class="n">db</span><span class="p">):</span>
    <span class="n">sc</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">7</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
            <span class="n">sc</span> <span class="o">+=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">da</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">-</span> <span class="n">db</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">sc</span>

<span class="c"># 根据打分猜0或1</span>
<span class="k">def</span> <span class="nf">guess</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">):</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">get</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">)</span>
    <span class="n">s</span> <span class="o">=</span> <span class="p">(</span><span class="n">score</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">d0</span><span class="p">),</span> <span class="n">score</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">d1</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">min</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">min</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>

<span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">4</span><span class="p">:</span>
    <span class="n">g</span><span class="p">,</span> <span class="n">s</span> <span class="o">=</span> <span class="n">guess</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>  <span class="c"># 测试左抖动 1px</span>
        <span class="n">gl</span><span class="p">,</span> <span class="n">sl</span> <span class="o">=</span> <span class="n">guess</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">sl</span> <span class="o">&lt;</span> <span class="n">s</span> <span class="o">-</span> <span class="mi">1000</span><span class="p">:</span>
            <span class="c">#print &#39;l&#39;,s,sl</span>
            <span class="n">g</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">gl</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">5</span><span class="p">:</span>  <span class="c"># 测试右抖动 1px</span>
        <span class="n">gr</span><span class="p">,</span> <span class="n">sr</span> <span class="o">=</span> <span class="n">guess</span><span class="p">(</span><span class="n">pix</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">sr</span> <span class="o">&lt;</span> <span class="n">s</span> <span class="o">-</span> <span class="mi">1000</span><span class="p">:</span>
            <span class="c">#print &#39;r&#39;,s,sr</span>
            <span class="n">g</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">gr</span><span class="p">,</span> <span class="n">sr</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="c">#print &#39;x:&#39;,x, s, g</span>
    <span class="k">print</span> <span class="n">g</span><span class="p">,</span>
    <span class="n">x</span> <span class="o">+=</span> <span class="mi">5</span>
</pre></div>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Project Euler Problem 100]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/10/19/project-euler-100/"/>
    <updated>2012-10-19T23:00:00</updated>
    <id>http://scturtle.me/2012/10/19/project-euler-100/</id>
    <content type="html"><![CDATA[
<p>最近不务正业地开始做这个，几乎都是用 python 暴搜的，刷的很 high，难得 ‘数学地’ 搞出一个来，不记一下就亏了。</p>
<p>题意是说，如果一个箱子里有21个碟子，15个蓝色的，6个红色的，那么从中随机抽两个碟子恰好都是蓝色的概率是$\frac 12$，因为$\frac{15}{21}\times\frac{14}{20}=\frac 12$。
对于包含超过$10^{12}$个碟子的箱子的情况中，满足此概率的包含最少碟子数的情况中，包含多少个蓝碟子？
<a href="http://projecteuler.net/problem=100">(原题)</a> 
<a href="http://pe.spiritzhang.com/index.php/2011-05-11-09-44-54/101-10050">(中文)</a></p>
<p>首先假设该情况包含 b 个碟子，其中有 a 个蓝碟子，那么所求概率为 $\frac{a}{b}\times\frac{a-1}{b-1}=\frac 12$。解方程得到：
$$a=\frac{1}{2}\left(1+\sqrt{1-2 b+2 b^2}\right)$$</p>
<p>看来 $1-2b+2b^2$ 应是个平方数，设 $1-2b+2b^2=t^2$ 再解方程得：
$$b=\frac12\left(1+\sqrt{-1+2t^2}\right)$$</p>
<p>那么发现 $-1+2t^2$ 也应该是个平方数，设 $-1+2t^2=s^2$，这个式子很简洁很眼熟啊，调整一下顺序：
$$s^2-2t^2=-1$$</p>
<p>难道是传说中的佩尔方程！不对，佩尔方程右边是 1 ，<a href="http://en.wikipedia.org/wiki/Pell_equation">wikipedia</a> 指示说这是个负佩尔方程（negative pell's equation）。佩尔方程是有最小解，而且其他解都可由最小解递归推出，而负佩尔方程不一定有解。但如果其有解则可由对应的佩尔方程的解求出。假设负佩尔方程 $x^2-n\,y^2=-1$ 的解为 $(x_1,y_1)$，其对应的佩尔方程 $x^2-n\,y^2=1$ 的解为 $(a,b)$，则有：
$$\left(x_1+y_1\sqrt{n}\right)^2=a+b\sqrt{n}$$
可得：
$$2x_1^2+1=a\\ 2\,x_1\,y_1=b$$
那么先解对应佩尔方程的最小解，再得到负佩尔方程的最小解，然后由以下递推公式可得负佩尔方程所有解（佩尔方程对应递推公式右上角处为 $i$ ）：
$$x_i+y_i\sqrt{n}=\left(x_1+y_1\sqrt{n}\right)^{2i-1}$$
即：
$$x_i=(2x_1^2+1)\,x_{i-1}+2nx_1y_1\,y_{i-1} \\
y_i=2x_1y_1\,x_{i-1}+(2x_1^2+1)\,y_{i-1}$$</p>
<p>好了，先求得对应佩尔方程的解（比如欧拉方法或者连分数方法），为 $(3,2)$，然后得到所需的负佩尔方程的解，为 $(1,1)$。先估计一个 t 的值，然后不断由递推公式推得所有解，一旦得到的解刚好大于估计值，几乎就可以确定得到答案了。</p>
<p>对应代码为：</p>
<div class="codehilite"><pre><span class="n">t</span> <span class="o">=</span> <span class="p">(((</span><span class="mi">10</span><span class="o">**</span><span class="mi">12</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">**</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">**</span><span class="mf">0.5</span>
<span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span>
<span class="k">while</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">t</span><span class="p">:</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">3</span><span class="o">*</span><span class="n">x</span><span class="o">+</span><span class="mi">4</span><span class="o">*</span><span class="n">y</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">x</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="n">y</span>
<span class="k">print</span> <span class="p">(</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</pre></div>


<p>幸运的是我们最后得到的 a 恰好是整数，也正是此题的解。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[vim-instant-markdown-py - vim 的 markdown 插件]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/8/15/vim-instant-markdown-py/"/>
    <updated>2012-08-15T11:00:00</updated>
    <id>http://scturtle.me/2012/8/15/vim-instant-markdown-py/</id>
    <content type="html"><![CDATA[
<p>偶然看到了 <a href="https://github.com/suan/vim-instant-markdown">vim-instant-markdown</a> 这个 vim 插件，
能一边在 vim 里编辑 markdown 一边在网页上实时渲染，碉堡了。
可是插件的各种依赖实在让人无奈，通过 ruby 调用 python 的 pygments，
又用 node.js 来处理 markdown 和 websocket，node.js 安装起来挺费劲，
而且使用管道不支持 windows。于是山寨了一个 python 版出来。</p>
<p>依赖：vim 需要有 python 支持，要有 python 库 bottle，markdown 和 pygment。</p>
<p>安装：<code>vim-instant-markdown-py.vim</code> 放到 <code>~/.vim/plugin</code> 下，
其他三个文件找个方便的地方放就好了。</p>
<p>运行：运行 <code>mdd.py</code>，（如果没有自动的话）打开 <code>index.html</code>，
显示 <code>connected</code> 就可以打开 vim 编辑 markdown 文件了。</p>
<p>演示: <br />
<div style="text-align:center;">
<video src="/2012/8/15/vim-instant-markdown-py/img/markdown.webm" controls>
</video>
</div></p>
<p>项目地址：<a href="http://github.com/scturtle/vim-instant-markdown-py">github.com/scturtle/vim-instant-markdown-py</a>。源码中借鉴来的地方有注明。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[QuickSmileText - 托盘上的快捷颜文字]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/8/12/quicksmiletext/"/>
    <updated>2012-08-12T10:00:00</updated>
    <id>http://scturtle.me/2012/8/12/quicksmiletext/</id>
    <content type="html"><![CDATA[
<p>入了个 Macbook Air，准备全面投靠 Mac 平台，不学一点儿原生程序开发说不过去。平常在聊天时，想输入颜文字的时候往往手忙脚乱，打开网页复制，遂有此试手作，在托盘图标菜单上快速复制颜文字，成功后还有原生 Mountain Lion 的通知。</p>
<p><img alt="pic" src="/2012/8/12/quicksmiletext/img/quicksmiletext.png" /></p>
<p>目前也没有写个配置界面，配置文件 smileTexts.plist 在用户的文稿（Documents）文件夹下，自行修改吧╮(￣▽￣")╭。</p>
<p>项目地址：<a href="https://github.com/scturtle/QuickSmileText">github.com/scturtle/QuickSmileText</a>。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Turtleblog 的配置]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/7/16/turtleblog-config/"/>
    <updated>2012-07-16T20:00:00</updated>
    <id>http://scturtle.me/2012/7/16/turtleblog-config/</id>
    <content type="html"><![CDATA[
<p>这个东西主要是自用和抛砖引玉而已。<a href="https://github.com/mitsuhiko/rstblog/">rstblog</a>、<a href="https://github.com/BrewerHimself/Logr">logr</a>、<a href="http://ringce.com/hyde">hyde</a> 这些项目更值得推荐。</p>
<p>运行于 python 2.7 环境，依赖于 python-markdown、pygments、jinja2、bottle 这几个项目，可 <code>pip install</code> 安装。</p>
<p><code>git clone</code> 一下 turtleblog 的<a href="https://github.com/scturtle/turtleblog.git">源码</a>。修改配置文件 config.json：</p>
<div class="codehilite"><pre>{
    &quot;site name&quot;: &quot;ScTurtle&#39;s Pool&quot;, //博客名会显示在左上角
    &quot;site url&quot;: &quot;http://scturtle.github.com&quot;, //博客网址
    &quot;author&quot;: &quot;scturtle&quot;,
    &quot;number of blogs per page&quot;: 10,
    &quot;markdown config&quot;:&quot;extra codehilite&quot;,//配置 markdown 扩展
    &quot;disqus shortname&quot;:&quot;scturtlespool&quot;
}
</pre></div>


<p>"disqus shortname" 这一项请先注册 disqus 的服务，然后在其提供的安装代码中寻找。</p>
<p>每一篇文章是 blog 目录下的一个文件夹（可以任意递归），例如建立 <em>2012/7/15/test/</em> 文件夹，那么这篇文章的 url 就是这个。文件夹下需要有 blog.md、config.json 两个文件。还可以有 img 文件夹专放图片。blog.md 中写主要文章内容，config.json 中配置：</p>
<div class="codehilite"><pre>{
    &quot;title&quot;:&quot;文章标题&quot;,
    &quot;tags&quot;:&quot;标签，以空格分隔&quot;,
    &quot;date&quot;:&quot;2012-7-15 10:00&quot;,
    &quot;enable mathjax&quot;:true //是否启用 mathjax，如果文中有 Tex 公式
}
</pre></div>


<p>如果需要 project、about 等独立页面，那么在 page 下建立一个包含 page.md、config.json 的文件夹，页面 url 为文件夹名称。config.json 中配置 "title"（显示在浏览器标签栏的名字）。</p>
<p>static 下的样式表 pygments.css 配置代码高亮的配色，style.css 为整个站点的配置，可修改整站主题。</p>
<p>修改 template 下的模板文件最好有一些 jinja2 的基础。一般只需要动一下 base.html 这个主要框架，比如加入独立页面的链接，修改页底的联系方式或加上 Google Analytics 的统计代码。</p>
<p>最后运行一下 turtle.py 这个脚本就会在 html 文件夹下生成好静态的文件了。运行 server.py 这个脚本可以在本地预览。在 github 建立一个 yourname.github.com 项目然后将 html 文件夹的内容提交到 master 分支即可。</p>
<p>写 markdown 时，我是用的自己的 markdown 编辑器 <a href="http://turtlenote-scturtle.rhcloud.com/">turtlenote</a>。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Turtleblog — 一个 python 静态博客生成器]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/7/15/turtleblog/"/>
    <updated>2012-07-15T19:00:00</updated>
    <id>http://scturtle.me/2012/7/15/turtleblog/</id>
    <content type="html"><![CDATA[
<p>Wordpress 已经 out 了，现在流行什么？静态博客。 <br />
Turtleblog 便是一个自用的静态博客生成器。基本上是模仿 <a href="http://lucumr.pocoo.org">Armin Ronacher</a> 博客的样式。</p>
<ul>
<li>单 python 脚本，200 行。再加一个基于 bottle 的十几行的用于本地测试的服务器脚本。</li>
<li>实现基于 markdown 的博客，支持图片，代码，Tex 公式。</li>
<li>实现文章标签和 RSS 输出。</li>
<li>使用 Python-markdown 和 Pygments 进行基本渲染。</li>
<li>使用 Jinja2 模板引擎。</li>
<li>使用 Disqus 作为评论服务。</li>
<li>使用 Json 文件保存配置。</li>
<li>可以方便的搭建在 Github Pages 上。</li>
</ul>
<p>demo：<a href="http://scturtle.github.com">scturtle.github.com</a>
（RSS暂时停止，确定没有什么 Bug 了再开）</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[测试]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/7/15/test/"/>
    <updated>2012-07-15T10:00:00</updated>
    <id>http://scturtle.me/2012/7/15/test/</id>
    <content type="html"><![CDATA[
<h1>测试</h1>
<h2>测试</h2>
<h3>测试</h3>
<h4>测试</h4>
<h5>测试</h5>
<h6>测试</h6>
<p>Long long very long English? Long long very long English! Long long very long English. </p>
<p>测试 latex 公式： $\frac 12$。</p>
<p>测试<em>强调</em>，<strong>加重</strong>。</p>
<p>测试超链接：<a href="www.google.com">google</a>。</p>
<p>测试分界线:</p>
<hr />
<p>测试换行： <br />
测试行内代码 <code>test</code>。</p>
<p>测试图片：</p>
<p><img alt="pic" src="/2012/7/15/test/img/head.jpg" /></p>
<p><img class=align-center src='/2012/7/15/test/img/head.jpg' style='width:100px'/></p>
<p>测试代码块：</p>
<div class="codehilite"><pre><span class="n">A</span> <span class="o">=</span> <span class="s">r&#39;&#39;&#39;B = &quot;A = r\&#39;&#39;&#39;&quot; + A + &quot;</span>\<span class="s">&#39;&#39;&#39;</span><span class="se">\n</span><span class="s">&quot; + A</span>
<span class="s">print B&#39;&#39;&#39;</span>
<span class="n">B</span> <span class="o">=</span> <span class="s">&quot;A = r</span><span class="se">\&#39;</span><span class="s">&#39;&#39;&quot;</span> <span class="o">+</span> <span class="n">A</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\&#39;</span><span class="s">&#39;&#39;</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">+</span> <span class="n">A</span>
<span class="k">print</span> <span class="n">B</span>
</pre></div>


<p>测试表格：</p>
<table>
<thead>
<tr>
<th>left</th>
<th>right</th>
</tr>
</thead>
<tbody>
<tr>
<td>l1</td>
<td>r1</td>
</tr>
<tr>
<td>l2</td>
<td>r2</td>
</tr>
<tr>
<td>l3</td>
<td>r3</td>
</tr>
</tbody>
</table>
]]> </content>
  </entry>
</feed>
