<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ScTurtle's Pool]]></title>
  <link href="http://scturtle.me/atom.xml" rel="self"/>
  <link href="http://scturtle.me/"/>
  <updated>2012-09-03T10:47:00</updated>
  <id>http://scturtle.me</id>
  <entry>
    <title type="html"><![CDATA[vim-instant-markdown-py - vim 的 markdown 插件]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/8/15/vim-instant-markdown-py/"/>
    <updated>2012-08-15T11:00:00</updated>
    <id>http://scturtle.me/2012/8/15/vim-instant-markdown-py/</id>
    <content type="html"><![CDATA[
<p>偶然看到了 <a href="https://github.com/suan/vim-instant-markdown">vim-instant-markdown</a> 这个 vim 插件，
能一边在 vim 里编辑 markdown 一边在网页上实时渲染，碉堡了。
可是插件的各种依赖实在让人无奈，通过 ruby 调用 python 的 pygments，
又用 node.js 来处理 markdown 和 websocket，node.js 安装起来挺费劲，
而且使用管道不支持 windows。于是山寨了一个 python 版出来。</p>
<p>依赖：vim 需要有 python 支持，要有 python 库 bottle，markdown 和 pygment。</p>
<p>安装：<code>vim-instant-markdown-py.vim</code> 放到 <code>~/.vim/plugin</code> 下，
其他三个文件找个方便的地方放就好了。</p>
<p>运行：运行 <code>mdd.py</code>，（如果没有自动的话）打开 <code>index.html</code>，
显示 <code>connected</code> 就可以打开 vim 编辑 markdown 文件了。</p>
<p>演示: <br />
<div style="text-align:center;">
<video src="/2012/8/15/vim-instant-markdown-py/img/markdown.webm" controls>
</video>
</div></p>
<p>项目地址：<a href="http://github.com/scturtle/vim-instant-markdown-py">github.com/scturtle/vim-instant-markdown-py</a>。源码中借鉴来的地方有注明。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[QuickSmileText - 托盘上的快捷颜文字]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/8/12/quicksmiletext/"/>
    <updated>2012-08-12T10:00:00</updated>
    <id>http://scturtle.me/2012/8/12/quicksmiletext/</id>
    <content type="html"><![CDATA[
<p>入了个 Macbook Air，准备全面投靠 Mac 平台，不学一点儿原生程序开发说不过去。平常在聊天时，想输入颜文字的时候往往手忙脚乱，打开网页复制，遂有此试手作，在托盘图标菜单上快速复制颜文字，成功后还有原生 Mountain Lion 的通知。</p>
<p><img alt="pic" src="/2012/8/12/quicksmiletext/img/quicksmiletext.png" /></p>
<p>目前也没有写个配置界面，配置文件 smileTexts.plist 在用户的文稿（Documents）文件夹下，自行修改吧╮(￣▽￣")╭。</p>
<p>项目地址：<a href="https://github.com/scturtle/QuickSmileText">github.com/scturtle/QuickSmileText</a>。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Turtleblog 的配置]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/7/16/turtleblog-config/"/>
    <updated>2012-07-16T20:00:00</updated>
    <id>http://scturtle.me/2012/7/16/turtleblog-config/</id>
    <content type="html"><![CDATA[
<p>这个东西主要是自用和抛砖引玉而已。<a href="https://github.com/mitsuhiko/rstblog/">rstblog</a>、<a href="https://github.com/BrewerHimself/Logr">logr</a>、<a href="http://ringce.com/hyde">hyde</a> 这些项目更值得推荐。</p>
<p>运行于 python 2.7 环境，依赖于 python-markdown、pygments、jinja2、bottle 这几个项目，可 <code>pip install</code> 安装。</p>
<p><code>git clone</code> 一下 turtleblog 的<a href="https://github.com/scturtle/turtleblog.git">源码</a>。修改配置文件 config.json：</p>
<div class="codehilite"><pre>{
    &quot;site name&quot;: &quot;ScTurtle&#39;s Pool&quot;, //博客名会显示在左上角
    &quot;site url&quot;: &quot;http://scturtle.github.com&quot;, //博客网址
    &quot;author&quot;: &quot;scturtle&quot;,
    &quot;number of blogs per page&quot;: 10,
    &quot;markdown config&quot;:&quot;extra codehilite&quot;,//配置 markdown 扩展
    &quot;disqus shortname&quot;:&quot;scturtlespool&quot;
}
</pre></div>


<p>"disqus shortname" 这一项请先注册 disqus 的服务，然后在其提供的安装代码中寻找。</p>
<p>每一篇文章是 blog 目录下的一个文件夹（可以任意递归），例如建立 <em>2012/7/15/test/</em> 文件夹，那么这篇文章的 url 就是这个。文件夹下需要有 blog.md、config.json 两个文件。还可以有 img 文件夹专放图片。blog.md 中写主要文章内容，config.json 中配置：</p>
<div class="codehilite"><pre>{
    &quot;title&quot;:&quot;文章标题&quot;,
    &quot;tags&quot;:&quot;标签，以空格分隔&quot;,
    &quot;date&quot;:&quot;2012-7-15 10:00&quot;,
    &quot;enable mathjax&quot;:true //是否启用 mathjax，如果文中有 Tex 公式
}
</pre></div>


<p>如果需要 project、about 等独立页面，那么在 page 下建立一个包含 page.md、config.json 的文件夹，页面 url 为文件夹名称。config.json 中配置 "title"（显示在浏览器标签栏的名字）。</p>
<p>static 下的样式表 pygments.css 配置代码高亮的配色，style.css 为整个站点的配置，可修改整站主题。</p>
<p>修改 template 下的模板文件最好有一些 jinja2 的基础。一般只需要动一下 base.html 这个主要框架，比如加入独立页面的链接，修改页底的联系方式或加上 Google Analytics 的统计代码。</p>
<p>最后运行一下 turtle.py 这个脚本就会在 html 文件夹下生成好静态的文件了。运行 server.py 这个脚本可以在本地预览。在 github 建立一个 yourname.github.com 项目然后将 html 文件夹的内容提交到 master 分支即可。</p>
<p>写 markdown 时，我是用的自己的 markdown 编辑器 <a href="http://turtlenote-scturtle.rhcloud.com/">turtlenote</a>。</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Turtleblog — 一个 python 静态博客生成器]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/7/15/turtleblog/"/>
    <updated>2012-07-15T19:00:00</updated>
    <id>http://scturtle.me/2012/7/15/turtleblog/</id>
    <content type="html"><![CDATA[
<p>Wordpress 已经 out 了，现在流行什么？静态博客。 <br />
Turtleblog 便是一个自用的静态博客生成器。基本上是模仿 <a href="http://lucumr.pocoo.org">Armin Ronacher</a> 博客的样式。</p>
<ul>
<li>单 python 脚本，200 行。再加一个基于 bottle 的十几行的用于本地测试的服务器脚本。</li>
<li>实现基于 markdown 的博客，支持图片，代码，Tex 公式。</li>
<li>实现文章标签和 RSS 输出。</li>
<li>使用 Python-markdown 和 Pygments 进行基本渲染。</li>
<li>使用 Jinja2 模板引擎。</li>
<li>使用 Disqus 作为评论服务。</li>
<li>使用 Json 文件保存配置。</li>
<li>可以方便的搭建在 Github Pages 上。</li>
</ul>
<p>demo：<a href="http://scturtle.github.com">scturtle.github.com</a>
（RSS暂时停止，确定没有什么 Bug 了再开）</p>
]]> </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[测试]]></title>
    <author> <name><![CDATA[scturtle]]></name> </author>
    <link href="http://scturtle.me/2012/7/15/test/"/>
    <updated>2012-07-15T10:00:00</updated>
    <id>http://scturtle.me/2012/7/15/test/</id>
    <content type="html"><![CDATA[
<h1>测试</h1>
<h2>测试</h2>
<h3>测试</h3>
<h4>测试</h4>
<h5>测试</h5>
<h6>测试</h6>
<p>Long long very long English? Long long very long English! Long long very long English. </p>
<p>测试 latex 公式： $\frac 12$。</p>
<p>测试<em>强调</em>，<strong>加重</strong>。</p>
<p>测试超链接：<a href="www.google.com">google</a>。</p>
<p>测试分界线:</p>
<hr />
<p>测试换行： <br />
测试行内代码 <code>test</code>。</p>
<p>测试图片：</p>
<p><img alt="pic" src="/2012/7/15/test/img/head.jpg" /></p>
<p><img class=align-center src='/2012/7/15/test/img/head.jpg' style='width:100px'/></p>
<p>测试代码块：</p>
<div class="codehilite"><pre><span class="n">A</span> <span class="o">=</span> <span class="s">r&#39;&#39;&#39;B = &quot;A = r\&#39;&#39;&#39;&quot; + A + &quot;</span>\<span class="s">&#39;&#39;&#39;</span><span class="se">\n</span><span class="s">&quot; + A</span>
<span class="s">print B&#39;&#39;&#39;</span>
<span class="n">B</span> <span class="o">=</span> <span class="s">&quot;A = r</span><span class="se">\&#39;</span><span class="s">&#39;&#39;&quot;</span> <span class="o">+</span> <span class="n">A</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\&#39;</span><span class="s">&#39;&#39;</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">+</span> <span class="n">A</span>
<span class="k">print</span> <span class="n">B</span>
</pre></div>


<p>测试表格：</p>
<table>
<thead>
<tr>
<th>left</th>
<th>right</th>
</tr>
</thead>
<tbody>
<tr>
<td>l1</td>
<td>r1</td>
</tr>
<tr>
<td>l2</td>
<td>r2</td>
</tr>
<tr>
<td>l3</td>
<td>r3</td>
</tr>
</tbody>
</table>
]]> </content>
  </entry>
</feed>
